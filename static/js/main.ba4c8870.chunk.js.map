{"version":3,"sources":["styles/table.module.scss","components/Header.jsx","utils.js","components/Button.jsx","components/FormElements.jsx","components/Table.jsx","components/MainContainer.jsx","computeSplit.js","App.js","index.js","styles/form.module.scss","styles/Header.module.scss","styles/button.module.scss"],"names":["module","exports","Header","className","styles","header","icon","roundDownByTwo","amount","Math","floor","Button","clickHandler","tippyContent","validNum","content","button","onClick","FormElements","props","handleInputElement","handleRadioButton","handleButtonClick","form","inputElement","htmlFor","type","name","style","color","onChange","inputText","radioButtons","radio","value","defaultChecked","Table","method","spread","container","length","Array","fill","map","el","id","MainContainer","useState","setAmount","setMethod","setSpread","setValidNum","e","num","isNaN","validatePositiveInteger","target","donationSpread","splitAmount","finalDayAmount","splittedDonations","oddAmount","eventAmount","slice","_","idx","reduce","acc","curr","toFixed","computeSplit","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba4c8870.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"table_container__2w6sG\"};","import React from \"react\";\r\nimport { FaHandsHelping } from \"react-icons/fa\";\r\nimport styles from \"../styles/Header.module.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className={styles.header}>\r\n      <FaHandsHelping className={styles.icon} />\r\n      <h1>Charity Splitter</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","/**\r\n * return the given number rounded down to two decimal places\r\n * @param {number} amount amount to be rounded\r\n * @returns {number} rounded down number\r\n */\r\nexport const roundDownByTwo = (amount) => {\r\n  return Math.floor(amount * 100) / 100;\r\n};\r\n\r\n/**\r\n * return the sum of the array of numbers\r\n * @param {Array.<number>} list array of numbers\r\n * @returns {number} sum of the numbers\r\n */\r\nexport const sum = (list) => {\r\n  return list.reduce((acc, curr) => acc + curr);\r\n};\r\n\r\n/**\r\n * validates the given input value is a positive integer\r\n * @param {string} num input element\r\n * @returns {boolean} whether the entered value is a positive number\r\n */\r\nexport const validatePositiveInteger = (num) => {\r\n  switch (true) {\r\n    case \"\":\r\n      return false;\r\n\r\n    case isNaN(num):\r\n      return false;\r\n\r\n    case +num < 0:\r\n      return false;\r\n\r\n    default:\r\n      return true;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { BsArrowRight } from \"react-icons/bs\";\r\nimport Tippy from \"@tippyjs/react\";\r\n\r\nimport \"tippy.js/dist/tippy.css\";\r\nimport styles from \"../styles/button.module.scss\";\r\n\r\nconst Button = ({ clickHandler, validNum }) => {\r\n  const tippyContent = validNum ? \"click to proceed\" : \"invalid input\";\r\n\r\n  return (\r\n    <Tippy content={tippyContent}>\r\n      <button className={styles.button} onClick={clickHandler}>\r\n        <BsArrowRight />\r\n      </button>\r\n    </Tippy>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nimport styles from \"../styles/form.module.scss\";\r\n\r\nconst FormElements = (props) => {\r\n  const {\r\n    validNum,\r\n    handleInputElement,\r\n    handleRadioButton,\r\n    handleButtonClick,\r\n  } = props;\r\n\r\n  return (\r\n    <div className={styles.form}>\r\n      <div className={styles.inputElement}>\r\n        <label htmlFor=\"value\">Enter your donation amount:</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"value\"\r\n          style={{ color: !validNum && \"red\" }}\r\n          onChange={handleInputElement}\r\n          className={styles.inputText}\r\n        />\r\n      </div>\r\n      <div className={styles.radioButtons}>\r\n        <div className={styles.radio}>\r\n          <input\r\n            type=\"radio\"\r\n            value=\"equal\"\r\n            name=\"method\"\r\n            defaultChecked\r\n            onChange={handleRadioButton}\r\n          />\r\n          <p>equal</p>\r\n        </div>\r\n        <div className={styles.radio}>\r\n          <input\r\n            type=\"radio\"\r\n            value=\"more_odd\"\r\n            name=\"method\"\r\n            onChange={handleRadioButton}\r\n          />\r\n          <p>more.odd</p>\r\n        </div>\r\n      </div>\r\n      <Button clickHandler={handleButtonClick} validNum={validNum} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormElements;\r\n","import React from \"react\";\r\nimport { FaRegMoneyBillAlt } from \"react-icons/fa\";\r\nimport styles from \"../styles/table.module.scss\";\r\n\r\nconst Table = ({ amount, method, spread, validNum }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1>Donation Amount: {validNum ? `$${amount}` : \"Invalid\"}</h1>\r\n      <h2>\r\n        Split using <strong>{method}</strong> method\r\n      </h2>\r\n      {spread.length > 0 && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              {new Array(10).fill(1).map((el, id) => (\r\n                <th key={id}>\r\n                  <div>\r\n                    <FaRegMoneyBillAlt />\r\n                    <p>Day {id + 1}</p>\r\n                  </div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              {spread.map((el, id) => (\r\n                <td key={id}>${el}</td>\r\n              ))}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState } from \"react\";\r\nimport { computeSplit } from \"../computeSplit\";\r\nimport { validatePositiveInteger } from \"../utils\";\r\nimport FormElements from \"./FormElements\";\r\nimport Table from \"./Table\";\r\n\r\nconst MainContainer = () => {\r\n  const [amount, setAmount] = useState(0);\r\n  const [method, setMethod] = useState(\"equal\");\r\n  const [spread, setSpread] = useState([]);\r\n  const [validNum, setValidNum] = useState(true);\r\n\r\n  const handleRadioButton = (e) => {\r\n    setMethod(e.target.value);\r\n  };\r\n\r\n  const handleInputElement = (e) => {\r\n    if (!validatePositiveInteger(e.target.value)) {\r\n      setValidNum(false);\r\n    } else {\r\n      setValidNum(true);\r\n    }\r\n    setAmount(e.target.value);\r\n  };\r\n\r\n  const handleButtonClick = () => {\r\n    if (!validNum) {\r\n      return;\r\n    }\r\n    const donationSpread = computeSplit(amount, method);\r\n    setSpread(donationSpread);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormElements\r\n        validNum={validNum}\r\n        handleInputElement={handleInputElement}\r\n        handleRadioButton={handleRadioButton}\r\n        handleButtonClick={handleButtonClick}\r\n      />\r\n      <Table\r\n        amount={amount}\r\n        method={method}\r\n        spread={spread}\r\n        validNum={validNum}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","import { roundDownByTwo, sum } from \"./utils\";\r\n\r\n/**\r\n * return splitted amount using the given method\r\n * @param {number} amount amount of money to be split\r\n * @param {string} method method to split, equal or more_odd\r\n * @returns {Array.<number>} donation spread array\r\n */\r\nexport const computeSplit = (amount, method) => {\r\n  let splitAmount, finalDayAmount;\r\n  let splittedDonations = new Array(10);\r\n\r\n  if (method === \"equal\") {\r\n    splitAmount = roundDownByTwo(amount / 10);\r\n    finalDayAmount = amount - splitAmount * 9;\r\n    splittedDonations = splittedDonations.fill(splitAmount, 0, 9);\r\n  } else if (method === \"more_odd\") {\r\n    const oddAmount = (amount * (2 / 3)) / 5;\r\n    const eventAmount = (amount * (1 / 3)) / 5;\r\n    splittedDonations = splittedDonations\r\n      .fill(1)\r\n      .slice(0, 9)\r\n      .map((_, idx) =>\r\n        idx % 2 === 0 ? roundDownByTwo(oddAmount) : roundDownByTwo(eventAmount)\r\n      );\r\n    finalDayAmount = amount - sum(splittedDonations);\r\n  }\r\n\r\n  splittedDonations[9] = +finalDayAmount.toFixed(2);\r\n  return splittedDonations;\r\n};\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport MainContainer from \"./components/MainContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MainContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles/_base.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__3sR6t\",\"inputElements\":\"form_inputElements__wR4-C\",\"inputText\":\"form_inputText__Wp-Gz\",\"radioButtons\":\"form_radioButtons__3fOE-\",\"radio\":\"form_radio__1URAq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1zy8S\",\"icon\":\"Header_icon__3h0V7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__1_jdP\"};"],"sourceRoot":""}